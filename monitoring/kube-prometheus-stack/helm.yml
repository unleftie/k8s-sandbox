---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  destination:
    name: in-cluster
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 63.1.0
    helm:
      values: |
        commonLabels:
          env: dev
          helmStack: prometheus

        prometheus-node-exporter:
          hostRootFsMount:
            enabled: false

        defaultRules:
          rules:
            etcd: false
            kubeSchedulerAlerting: false
            kubeSchedulerRecording: false
            kubeControllerManager: false

        customRules:
          KubePodCrashLooping:
            severity: "critical"
          AlertmanagerFailedToSendAlerts:
            severity: "critical"

        grafana:
          # FIXME: move to secret
          adminPassword: admin
          defaultDashboardsTimezone: Europe/Kyiv
          grafana.ini:
            users:
              default_theme: system
              allow_sign_up: false
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: "default"
                  orgId: 1
                  folder: ""
                  type: file
                  disableDeletion: true
                  editable: false
                  options:
                    path: /var/lib/grafana/dashboards/default
          dashboards:
            default:
              node-exporter:
                gnetId: 1860
                revision: 37
                datasource: Prometheus
              healthcheck-icmp:
                url: https://raw.githubusercontent.com/unleftie/ansible-roles-grafana/main/roles/grafana/files/dashboards/healthcheck-ICMP.json
              healthcheck-http:
                url: https://raw.githubusercontent.com/unleftie/ansible-roles-grafana/main/roles/grafana/files/dashboards/healthcheck-HTTP.json

        alertmanager:
          alertmanagerSpec:
            alertmanagerConfigSelector:
              matchLabels:
                helmStack: prometheus
          # FIXME: rework as configMaps
          templateFiles:
            telegram.tmpl: |-
              {{ define "telegram.tmpl" }}
              {{ range .Alerts }}
              {{ if eq .Status "firing" }}ðŸš¨ {{ .Status | toUpper }} ðŸš¨ {{ else }}âœ… {{ .Status | toUpper }} âœ… {{ end }}
              ALERTNAME: {{ .Labels.alertname }}
              SUMMARY: {{ .Annotations.summary }}
              SERVICE: {{ .Labels.service }}
              {{ if eq .Status "firing" }}STARTS AT: {{ .StartsAt.Local }} {{ else }}ENDS AT: {{ .EndsAt.Local }} {{ end }}
              {{ end }}
              {{ end }}
          config:
            global:
              resolve_timeout: 5m
            templates:
              - "/etc/alertmanager/config/*.tmpl"
            route:
              group_by:
                - "namespace"
                - "job"
                - "alertname"
              group_wait: 15s
              group_interval: 15s
              repeat_interval: 24h
              routes:
                - receiver: "null"
                  matchers:
                    - alertname = "Watchdog"

        prometheus:
          additionalPodMonitors:
            - name: "node-exporter-external"
              namespaceSelector:
                any: true
              selector:
                matchLabels:
                  monitoring: prometheus
              podMetricsEndpoints:
                - port: "http-metrics"
                  path: "metrics"
                  scheme: "http"
          prometheusSpec:
            ruleSelectorNilUsesHelmValues: false
            additionalScrapeConfigs:
              - job_name: "blackbox_http"
                metrics_path: /probe
                params:
                  module: [http]
                file_sd_configs:
                  - files:
                      - /etc/prometheus/file_sd/blackbox_http.yml
                kubernetes_sd_configs:
                  - role: service
                    attach_metadata:
                      node: true
                    namespaces:
                      names:
                        - default
                    selectors:
                      - role: service
                        label: monitoring
                relabel_configs:
                  - source_labels: [__address__]
                    target_label: __param_target
                  - source_labels: [__param_target]
                    target_label: instance
                  - source_labels: [__meta_kubernetes_service_name, service]
                    target_label: service
                    separator: ""
                  - source_labels: [__meta_kubernetes_service_label_env, env]
                    target_label: env
                    separator: ""
                  - target_label: __address__
                    replacement: prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115
              - job_name: "blackbox_icmp"
                metrics_path: /probe
                params:
                  module: [icmp]
                file_sd_configs:
                  - files:
                      - /etc/prometheus/file_sd/blackbox_icmp.yml
                relabel_configs:
                  - source_labels: [__address__]
                    target_label: __param_target
                  - source_labels: [__param_target]
                    target_label: instance
                  - target_label: __address__
                    replacement: prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115
            volumes:
              - name: file-sd-config
                configMap:
                  name: prometheus-file-sd-targets
            volumeMounts:
              - name: file-sd-config
                mountPath: /etc/prometheus/file_sd
